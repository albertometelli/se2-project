#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass beamer
\begin_preamble
\usetheme{Warsaw}

\setbeamercovered{transparent}
% or whatever (possibly just delete it)

\usepackage{settings}
\usepackage{framed}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman times
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 0
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 0
\use_package mhchem 1
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
myTaxiService
\end_layout

\begin_layout Subtitle
Software Engineering 2 -Project
\end_layout

\begin_layout Author
Alberto Maria
\begin_inset space ~
\end_inset

Metelli
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 Riccardo
\begin_inset space ~
\end_inset

Mologni
\begin_inset Argument 1
status open

\begin_layout Plain Layout
A.M.
 Metelli, R.
 Mologni
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
- optional, use only with lots of authors
\end_layout

\begin_layout Plain Layout
- if there are really lots of authors, use 
\begin_inset Quotes eld
\end_inset

Author et al.
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Institute
Politecnico di Milano
\begin_inset Newline newline
\end_inset

M.
 Sc.
 in Computer Science and Engineering
\end_layout

\begin_layout Date
RASD Presentation, 11th November 2015
\begin_inset Argument 1
status open

\begin_layout Plain Layout
RASD 2015
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
optional, should be abbreviation of conference name
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
If you have a file called "institution-logo-filename.xxx", where xxx is a
 graphic format that can be processed by latex or pdflatex, resp., then you
 can add a logo by uncommenting the following:
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
pgfdeclareimage[height=1cm]{institution-logo}{logo}
\end_layout

\begin_layout Plain Layout

%
\backslash
logo{
\backslash
pgfuseimage{institution-logo}}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
AtBeginSubsection[]{%
\end_layout

\begin_layout Plain Layout

  
\backslash
frame<beamer>{ 
\end_layout

\begin_layout Plain Layout

    
\backslash
frametitle{Outline}   
\end_layout

\begin_layout Plain Layout

    
\backslash
tableofcontents[currentsection,currentsubsection] 
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
beamerdefaultoverlayspecification{<+->}
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Outline
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Structuring a talk is a difficult task and the following structure may not
 be suitable.
 Here are some rules that apply for this solution: 
\end_layout

\begin_layout Itemize
Outline (1)
\end_layout

\begin_layout Itemize
Introduction
\end_layout

\begin_deeper
\begin_layout Itemize
[Structure of document (1)]
\end_layout

\begin_layout Itemize
Actors (1)
\end_layout

\begin_layout Itemize
JacksonZave approach and Goals (3)
\end_layout

\begin_layout Itemize
Product perspective (1) + acronyms
\end_layout

\end_deeper
\begin_layout Itemize
Functional requirements (2 of them)
\end_layout

\begin_deeper
\begin_layout Itemize
[Scenarios (2 of them)]
\end_layout

\begin_layout Itemize
State chart
\end_layout

\begin_layout Itemize
Use case diagram
\end_layout

\begin_layout Itemize
Reservation
\end_layout

\begin_deeper
\begin_layout Itemize
Table
\end_layout

\begin_layout Itemize
Sequence
\end_layout

\end_deeper
\begin_layout Itemize
Request evaluation
\end_layout

\begin_deeper
\begin_layout Itemize
Table
\end_layout

\begin_layout Itemize
Activity
\end_layout

\end_deeper
\begin_layout Itemize
Class diagram
\end_layout

\begin_layout Itemize
Breif of some non functional
\end_layout

\end_deeper
\begin_layout Itemize
Alloy 
\end_layout

\begin_deeper
\begin_layout Itemize
sig
\end_layout

\begin_layout Itemize
facts
\end_layout

\begin_layout Itemize
2 pred
\end_layout

\begin_layout Itemize
2 assertion
\end_layout

\begin_layout Itemize
queue
\end_layout

\end_deeper
\end_inset


\end_layout

\end_deeper
\begin_layout Section
Introduction
\end_layout

\begin_layout Subsection
Actors
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Actors
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Passenger
\end_layout

\begin_deeper
\begin_layout Itemize
Registered passenger
\end_layout

\begin_layout Itemize
Unregistered passenger
\end_layout

\end_deeper
\begin_layout Itemize
Taxi driver
\end_layout

\begin_layout Itemize
Call center operator
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Subsection
Goals identification
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Goals
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Jackson Zave approach - 1
\end_layout

\begin_layout Itemize
[G1] Allow a passenger to request a taxi for his/her current position without
 registration.
\end_layout

\begin_layout Itemize
[G2] Allow the passenger to visualize the waiting time and the code of the
 incoming taxi for confirmed requests.
\end_layout

\begin_layout Itemize
[G3] Allow a registered passenger to have a personal area.
\end_layout

\begin_layout Itemize
[G4] Allow a registered passenger to reserve a taxi.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Goals
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Jackson Zave approach - 2
\end_layout

\begin_layout Itemize
[G5] Allow a registered passenger to cancel or modify a previous reservation.
 
\end_layout

\begin_layout Itemize
[G6] Allow a taxi driver to either accept or reject a request coming from
 the system.
\end_layout

\begin_layout Itemize
[G7] Allow a taxi driver to inform the system about his/her availability.
\end_layout

\begin_layout Itemize
[G8] Ensure that available taxi queues enjoy 
\begin_inset Quotes eld
\end_inset

fair properties
\begin_inset Quotes erd
\end_inset

 specified in sub paragraph 1.6.2.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
i* model
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Graphics
	filename images/istarmodeling.png
	scale 20

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Subsection
Product perspective
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Product perspective
\end_layout

\end_inset


\end_layout

\begin_layout Frame

\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Conceptual system decomposition
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/Diagram.pdf
	scale 30

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Product perspective
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Interoperability
\end_layout

\begin_layout Itemize
Integration with the previous taxi management system based on phone calls
\end_layout

\begin_layout Itemize
APIs to allow programmers to access the main functionalities for future
 requirements extensions
\end_layout

\end_deeper
\begin_layout Section
Requirement analysis
\end_layout

\begin_layout Subsection
Functional requirements
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Functional requirements
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Functional requirements
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Request - 1
\end_layout

\begin_layout Itemize

\series bold
[G1] Allow a passenger to request a taxi for his/her current position without
 registration.
\end_layout

\begin_layout Itemize
[R1.1] TS shall provide the passenger with a form in which he/she has to
 insert the total number of passengers and accept terms and conditions.
\end_layout

\begin_layout Itemize
[R1.2] TS shall retrieve automatically passenger's position if GPS or browser
 geolocalization is available, otherwise user has to specify his/her address.
\end_layout

\end_deeper
\begin_layout Frame

\end_layout

\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Functional requirements
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Request - 2
\end_layout

\begin_layout Itemize

\series bold
[G1] Allow a passenger to request a taxi for his/her current position without
 registration.
\end_layout

\begin_layout Itemize
[R1.3] After confirmation, TS shall store the request and 
\end_layout

\begin_deeper
\begin_layout Itemize
[R.1.3.1] Assign it to the first available taxi in the queue of the zone.
 
\end_layout

\begin_layout Itemize
[R.1.3.2] If the queue is empty, TS shall look for taxis in the queues of adjacent
 zones and, if necessary, repeat the process for the other adjacent zones.
\end_layout

\begin_layout Itemize
[R.1.3.3] If no taxi is found, TS shall inform passenger and put request on
 hold.
\end_layout

\end_deeper
\end_deeper
\begin_layout Frame

\end_layout

\begin_layout Separator

\end_layout

\begin_layout Frame

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Functional requirements
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Reservation
\end_layout

\begin_layout Itemize

\series bold
[G4] Allow a registered passenger to reserve a taxi.
\end_layout

\begin_layout Itemize
[R4.1] TS shall provide the registered passenger with a form in which he/she
 has to insert the total number of passengers, the origin and the destination
 of the ride, the date and time of the meeting.
\end_layout

\begin_layout Itemize
[R4.2] TS shall accept only reservations made at least two hours in advance.
\end_layout

\begin_layout Itemize
[R4.3] TS shall store the reservation, allocate a request 10 minutes before
 the meeting time.
\end_layout

\end_deeper
\begin_layout Frame

\end_layout

\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Functional requirements
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Request evaluation
\end_layout

\begin_layout Itemize

\series bold
[G6] Allow a taxi driver to either accept or reject a request coming from
 the system.
\end_layout

\begin_layout Itemize
[R6.1] TS shall show to the chosen taxi driver the request indicating coordinates
 of the passenger and total number of passengers.
\end_layout

\begin_layout Itemize
[R6.2] TS shall provide the taxi driver with a form allowing him to choose
 if accept or reject the request.
\end_layout

\begin_layout Itemize
[R6.3] TS prevents taxi driver to reject twice the same request.
\end_layout

\begin_layout Itemize
[R6.4] In case of acceptance, TS shall put the taxi driver into state 
\emph on
busy
\emph default
, otherwise put taxi driver at the end of the queue and repeat [R1.3].
 If no answer from the taxi driver in one minute it is interpreted as a
 rejection.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Section
Requirement specification
\end_layout

\begin_layout Subsection
Use cases
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Use cases
\end_layout

\end_inset


\end_layout

\begin_layout Frame

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Use cases
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
UML Use Case diagram
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename D:/Dropbox/Software Engineering 2 - Project/myTaxiService/specific-requirements/3.4-use-cases/image/use case.pdf
	scale 40
	BoundingBox 50bp 100bp 842bp 560bp

\end_inset


\end_layout

\end_deeper
\begin_layout Frame

\end_layout

\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Reservation
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Use case description - 1
\end_layout

\begin_layout Standard
\align left
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="7cm">
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\emph on
Name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\align left

\size footnotesize
Reservation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\emph on
Related goals
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\align left

\size footnotesize
[G4]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\emph on
Actors
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\align left

\size footnotesize
Registered passenger
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\emph on
Entry condition
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\align left

\size footnotesize
Passenger is logged in.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\emph on
Flow of events
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
\align left

\size footnotesize
Passenger accesses to the reservation area.
\end_layout

\begin_layout Enumerate
\align left

\size footnotesize
Passenger inserts the required data (origin, destination, date, time, number
 of passengers).
\end_layout

\begin_layout Enumerate
\align left

\size footnotesize
Passenger confirms the reservation.
\end_layout

\begin_layout Enumerate
\align left

\size footnotesize
TS system whether data are valid.
 
\end_layout

\begin_layout Enumerate
\align left

\size footnotesize
QMA creates a new reservation and the related request is allocated.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Reservation
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Use case description - 2
\end_layout

\begin_layout Standard
\align left
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="7cm">
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\emph on
Exit condition
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\align left

\size footnotesize
The reservation is added to the TS system.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\emph on
Exceptions
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Itemize
\paragraph_spacing single

\size footnotesize
If passenger does not confirm the operation is not performed.
\end_layout

\begin_layout Itemize
\paragraph_spacing single

\size footnotesize
If the data are not valid (origin, destination, number of passengers) an
 error message is shown to passenger and the operation is not performed.
 Passenger can repeat the process.
\end_layout

\begin_layout Itemize
\paragraph_spacing single

\size footnotesize
If the date and time are such that the reservation is not made at least
 two hour in advance an error message is shown to user and the operation
 is not performed.
 Passenger can repeat the process.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Reservation
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Sequence diagram - 1
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/serquence1.png
	scale 30

\end_inset


\end_layout

\end_deeper
\begin_layout Frame

\end_layout

\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Reservation
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Sequence diagram - 2
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/serquence2.png
	scale 30

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Request evaluation
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Activity diagram - 1
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/activity1.png
	scale 25

\end_inset


\end_layout

\end_deeper
\begin_layout Frame

\end_layout

\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Request evaluation
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Activity diagram - 2
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/activity2.png
	scale 25

\end_inset


\end_layout

\end_deeper
\begin_layout Frame

\end_layout

\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Request evaluation
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Activity diagram - 3
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/activity3png.png
	scale 25

\end_inset


\end_layout

\end_deeper
\begin_layout Frame

\end_layout

\begin_layout Separator

\end_layout

\begin_layout Subsection
Other UML diagrams
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Other UML diagrams
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Class diagram
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Graphics
	filename images/class.pdf
	scale 40
	BoundingBox 30bp 100bp 822bp 570bp

\end_inset


\end_layout

\end_deeper
\begin_layout Frame

\end_layout

\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
State Chart
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/state.pdf
	scale 30

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Subsection
Non functional requirements
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Non functional requirements
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout ColumnsTopAligned

\end_layout

\begin_deeper
\begin_layout Column
5cm
\end_layout

\begin_layout Itemize
Performance
\end_layout

\begin_layout Itemize
Reliability
\end_layout

\begin_layout Itemize
Availability 
\end_layout

\begin_layout Itemize
Security 
\end_layout

\begin_layout Column
5cm
\end_layout

\begin_layout Itemize
Maintainability 
\end_layout

\begin_layout Itemize
Portability 
\end_layout

\begin_layout Itemize
Documentation
\end_layout

\begin_layout Itemize
User interface and human factors 
\end_layout

\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Subsection
Alloy model
\end_layout

\begin_layout FragileFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Alloy model
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Some signatures - 1
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily}"
inline false
status open

\begin_layout Plain Layout

abstract sig Passenger{} 
\end_layout

\begin_layout Plain Layout

sig UnregisteredPassenger extends Passenger{} 
\end_layout

\begin_layout Plain Layout

sig RegisteredPassenger extends Passenger{}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

abstract sig TaxiState{} 
\end_layout

\begin_layout Plain Layout

one sig OutOfService,Emergency extends TaxiState{} 
\end_layout

\begin_layout Plain Layout

one sig Available, Busy, Moving extends TaxiState{}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

abstract sig Taxi { 	
\end_layout

\begin_layout Plain Layout

	driver: lone TaxiDriver, 	
\end_layout

\begin_layout Plain Layout

	state: one TaxiState, 	
\end_layout

\begin_layout Plain Layout

	numberOfSeats: one Int, 
\end_layout

\begin_layout Plain Layout

}  
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

sig MinivanTaxi extends Taxi {} {numberOfSeats = 9} 
\end_layout

\begin_layout Plain Layout

sig NormalTaxi extends Taxi {} {numberOfSeats = 4}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout FragileFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Alloy model
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Some signatures - 2
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily}"
inline false
status open

\begin_layout Plain Layout

sig Request{ 	
\end_layout

\begin_layout Plain Layout

	passenger: one Passenger, 	
\end_layout

\begin_layout Plain Layout

	date: one Date, 	
\end_layout

\begin_layout Plain Layout

	time: one Time, 	
\end_layout

\begin_layout Plain Layout

	numberOfPassengers: one Int, 	
\end_layout

\begin_layout Plain Layout

	location: one Location, 
\end_layout

\begin_layout Plain Layout

}  {numberOfPassengers>=1}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

sig ConfirmedRequest extends Request{ 	
\end_layout

\begin_layout Plain Layout

	waitingTime: one Time, 	
\end_layout

\begin_layout Plain Layout

	taxis: some Taxi, 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout FragileFrame

\end_layout

\begin_layout Separator

\end_layout

\begin_layout FragileFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Alloy model
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Some facts - 1
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily},breaklines=true"
inline false
status open

\begin_layout Plain Layout

//Origin and destination for each request must be different
\end_layout

\begin_layout Plain Layout

fact originAndDestinationDifferent {
\end_layout

\begin_layout Plain Layout

	all r: Reservation | r.origin != r.destination
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Pause

\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily},breaklines=true"
inline false
status open

\begin_layout Plain Layout

//In each request the number of seats must be sufficient wrt number of passenger
s
\end_layout

\begin_layout Plain Layout

fact numberOfSeatsSufficient { 	
\end_layout

\begin_layout Plain Layout

	all r: ConfirmedRequest | sum r.taxis.numberOfSeats 
\end_layout

\begin_layout Plain Layout

		>= r.numberOfPassengers 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout FragileFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Alloy model
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Some facts - 2
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily},breaklines=true"
inline false
status open

\begin_layout Plain Layout

//The number of taxis sent are the minimun requested to pick up all passengers
 
\end_layout

\begin_layout Plain Layout

fact numberOfSeatsAreTheMinimumRequired { 	
\end_layout

\begin_layout Plain Layout

	all r: ConfirmedRequest | no taxiSubset: set Taxi | taxiSubset in r.taxis
 and taxiSubset != r.taxis and sum taxiSubset.numberOfSeats >= r.numberOfPassengers
 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Pause

\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily},breaklines=true"
inline false
status open

\begin_layout Plain Layout

fact numberOfSeatsAreTheMinimumRequired { 	
\end_layout

\begin_layout Plain Layout

	all r: ConfirmedRequest | no t: Taxi | t in r.taxis and sum r.taxis.numberOfSeats
 - t.numberOfSeats >= r.numberOfPassengers 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout FragileFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Alloy model
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Predicates
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily},breaklines=true"
inline false
status open

\begin_layout Plain Layout

//Predicate for sending a request: if the request is not already confirmed
 and it is not already in the set it is added to the set  
\end_layout

\begin_layout Plain Layout

pred sendRequest[setOfRequests,setOfRequests': set Request, request: Request]
 { 	 	
\end_layout

\begin_layout Plain Layout

	no ((ConfirmedRequest + setOfRequests) & request)  implies  		 		
\end_layout

\begin_layout Plain Layout

		setOfRequests' = setOfRequests + request  	
\end_layout

\begin_layout Plain Layout

	else 		
\end_layout

\begin_layout Plain Layout

		setOfRequests' = setOfRequests  
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout FragileFrame

\end_layout

\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Alloy model
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
World generated by pred sendRequest
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/sendRequest.png
	scale 30

\end_inset


\end_layout

\end_deeper
\begin_layout Frame

\end_layout

\begin_layout FragileFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Alloy model
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Assertions
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily},breaklines=true"
inline false
status open

\begin_layout Plain Layout

//Request carried out by the same taxi driver must be different in date
 or time 
\end_layout

\begin_layout Plain Layout

assert allRequestOfTheSameTaxiDriverDifferentInTime { 	
\end_layout

\begin_layout Plain Layout

	all td: TaxiDriver | all disj r1,r2: ConfirmedRequest | td in (r1.taxis.driver
 & r2.taxis.driver) implies not atTheSameTime[r1,r2] 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{framed}
\end_layout

\begin_layout Plain Layout


\backslash
footnotesize
\end_layout

\begin_layout Plain Layout

Executing "Check allRequestOfTheSameTaxiDriverDifferentInTime for 10"  
  
\end_layout

\begin_layout Plain Layout

Solver=sat4j Bitwidth=4 MaxSeq=7 SkolemDepth=1 Symmetry=20    
\end_layout

\begin_layout Plain Layout

50129 vars.
 2338 primary vars.
 125356 clauses.
 109ms.
    
\end_layout

\begin_layout Plain Layout

No counterexample found.
 Assertion may be valid.
 219ms.
\end_layout

\begin_layout Plain Layout


\backslash
end{framed}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout FragileFrame

\end_layout

\begin_layout Separator

\end_layout

\begin_layout FragileFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Alloy model
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Queue modeling - 1
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily},breaklines=true"
inline false
status open

\begin_layout Plain Layout

sig Zone{ 	
\end_layout

\begin_layout Plain Layout

	queue: one Queue, 	
\end_layout

\begin_layout Plain Layout

	adjacentZones: some Zone, 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

//Queue definition
\end_layout

\begin_layout Plain Layout

sig Queue { 	
\end_layout

\begin_layout Plain Layout

	root: lone Node 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

sig Node { 	
\end_layout

\begin_layout Plain Layout

	taxi: one Taxi, 	
\end_layout

\begin_layout Plain Layout

	next: lone Node 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout FragileFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Alloy model
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Queue modeling - 2
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily},breaklines=true"
inline false
status open

\begin_layout Plain Layout

//Structural properties 
\end_layout

\begin_layout Plain Layout

fact queueStructuralProperties { 
\end_layout

\begin_layout Plain Layout

	
\end_layout

\begin_layout Plain Layout

	//Each node belongs to exactly one queue 	
\end_layout

\begin_layout Plain Layout

	all n: Node | one q: Queue | n in q.root.*next	
\end_layout

\begin_layout Plain Layout

	//No cycles
\end_layout

\begin_layout Plain Layout

	no n: Node | n in n.^next									 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

//Adjacency relation between zones is simmetric but not reflexive 
\end_layout

\begin_layout Plain Layout

fact adjacencySimmetricButNotReflexive { 	
\end_layout

\begin_layout Plain Layout

	adjacentZones in ~adjacentZones 	
\end_layout

\begin_layout Plain Layout

	no adjacentZones & iden 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout FragileFrame

\end_layout

\begin_layout Separator

\end_layout

\begin_layout FragileFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Alloy model
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
World generated
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/queues.png
	scale 30

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout FragileFrame

\end_layout

\begin_layout FragileFrame

\end_layout

\begin_layout Section*
\start_of_appendix
Appendix
\end_layout

\begin_layout Subsection*
References
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
References
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
IEEE Software Engineering Standards Committee, “IEEE Std 830-1998, IEEE
 Recommended Practice for Software Requirements Specifications”, October
 20, 1998.
 
\end_layout

\begin_layout Itemize
P, Zave, M.
 Jackson, Four dark corners of requirements engineering, TOSEM 1997.
\end_layout

\begin_layout Itemize
Software Abstractions: Logic, Language, and Analysis, revised edition Edition
 by Daniel Jackson, MIT Press.
\end_layout

\begin_layout Itemize
Software Engineering 2 course slides.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Subsection*
Questions
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Questions
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/questions.jpg
	scale 80

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\end_deeper
\end_body
\end_document
