#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{fancyhdr}
\usepackage{afterpage}
\usepackage{framed}
\usepackage{../settings}
\usepackage{pdflscape}
\usepackage{lscape}
\usepackage{color}   %May be necessary if you want to color links
\usepackage{hyperref}

%Set up settings
\setcounter{secnumdepth}{4}
\usepackage{hyperref}
\hypersetup{
    linktoc=all,     %set to all if you want both sections and subsections linked
}
 \usepackage{algorithm}
 \usepackage{algorithmicx}
\usepackage{algpseudocode}
\usepackage{tikz}
\usetikzlibrary{positioning}
\usetikzlibrary{arrows}
\end_preamble
\use_default_options true
\master ../FP.lyx
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding default
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\boxbgcolor #d6d6d6
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 3cm
\topmargin 3.5cm
\rightmargin 3cm
\bottommargin 3cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Subsection
Introduction to cost estimation
\end_layout

\begin_layout Standard
Estimating the cost of a software project is a non trivial task.
 Many aspects contribute to determine the effort put in a software project
 and relationships among the characteristics of the project team (number
 of people, type of organization, ...), the features of the project itself
 (complexity) and the environmental influences are typically intricate and
 difficult to be estimated with an acceptable degree of approximation.
 Therefore often we rely on the 
\emph on
experience-based techniques
\emph default
 where the estimation is made by an experienced manager on the basis on
 the past projects and the application domain, sometimes this task is performed
 by a team of experts (community-based estimation).
 If no experts are available, or the domain of the application in too specific
 only 
\emph on
algorithmic cost modeling 
\emph default
is allowed.
 Those techniques are based on a formulated approach to compute the project
 effort based on estimates of product attributes.
 We will adopt the 
\emph on
Function Points
\emph default
 technique that was proposed by Allan Albrecht at IBM in 1965 and then COCOMOII
 that was developed around '80 based on the statistical analysis performed
 by Barry Boehn on the basis on many real projects coming from various domains.
\end_layout

\begin_layout Subsection
Function points approach
\end_layout

\begin_layout Standard
There is an underlying hypothesis behind function points: the dimension
 of software can be characterized by 
\emph on
abstraction
\emph default
.
 Therefore after the architectural design (early in the project life cycle),
 when the product model is almost clear, a rough evaluation of the size
 of the software can be performed.
 Albrecht’s method identifies and counts the number of function types within
 the software (actually its model), those types constitutes the “external
 representation” of an application, that is, its functionality as defined
 from an abstract point of view.
 The types of functionalists are the following:
\end_layout

\begin_layout Itemize

\emph on
Internal Logical File
\emph default
 (ILF): homogeneous set of data used and managed by the application.
\end_layout

\begin_layout Itemize

\emph on
External Interface File
\emph default
 (EIF): homogeneous set of data used by the application but generated and
 maintained by other applications.
\end_layout

\begin_layout Itemize

\emph on
External Input
\emph default
: elementary operation to elaborate data coming form the external environment.
\end_layout

\begin_layout Itemize

\emph on
External Output:
\emph default
 elementary operation that generates data for the external environment;
 it usually includes the elaboration of data from logic files.
\end_layout

\begin_layout Itemize

\emph on
External Inquiry
\emph default
: elementary operation that involves input and output, without significant
 elaboration of data from logic files.
\end_layout

\begin_layout Standard
The measure of the size of the software is given by the weighed average
 of the function points (number of each function type listed above), according
 to the following predefined table.
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="4">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top" width="5cm">
<column alignment="center" valignment="top" width="2cm">
<column alignment="center" valignment="top" width="2.5cm">
<column alignment="center" valignment="top" width="2cm">
<row>
<cell multirow="3" alignment="left" valignment="middle" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Function type
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" usebox="none" width="7cm">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Weight
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Simple
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Average
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Complex
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
EI (External Inputs)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
EO (External Outputs)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
EQ (External Inquiries)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
ILF (Internal Logical Files)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
ELF (External Logical Files)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
The resulting sum is called UFP (Unadjusted Function Points).
 This value can be further manipulated with the 
\begin_inset Quotes eld
\end_inset

adjustment
\begin_inset Quotes erd
\end_inset

 formula to get an estimation of the effort, however the result is sometime
 little significant, therefore it is suggested to use the UFP in combination
 with other effort estimation algorithms like COCOMO II.
 
\end_layout

\begin_layout Subsection
Function point count
\end_layout

\begin_layout Standard
In this section we present the function point count; for each type of functional
ity we list the ones we have identified within the myTaxiService system
 with the corresponding complexity and a rational for our choice.
 According to the Albrecht definition, this process is performed by abstraction
 therefore the main resource is the RASD in particular the high level class
 diagram for the logical files and the use cases for the inputs, outputs
 and inquiries.
\end_layout

\begin_layout Subsubsection
ILF (Internal logical files)
\end_layout

\begin_layout Standard
The application includes a number of ILFs that will be used to store information
 about:
\end_layout

\begin_layout Itemize

\emph on
passengers
\emph default
, in particular username, password, lastname, firstname, email and address;
\end_layout

\begin_layout Itemize

\emph on
taxi drivers
\emph default
, in particular username, password, firstname and lastname;
\end_layout

\begin_layout Itemize

\emph on
taxis
\emph default
, in particular the plate number, the code, the number of seats and the
 current state;
\end_layout

\begin_layout Itemize

\emph on
requests
\emph default
, in particular the date and time in which the request is sent, the number
 of passengers, the location (geographical coordinates and the address)
 of the passenger, possibly the waiting time and the taxis assigned to the
 request itself;
\end_layout

\begin_layout Itemize

\emph on
reservations
\emph default
, in particular the date and time in which the request is sent, the number
 of passengers, the location (geographical coordinates and the address)
 of both origin and destination and the corresponding attached request;
\end_layout

\begin_layout Itemize

\emph on
zones
\emph default
, in particular the name of the zone, the estimation of the requests per
 minute and the adjacency relation among zones;
\end_layout

\begin_layout Itemize

\emph on
queues
\emph default
: in particular the proper size of the queue (and also the minimum and maximum
 number of taxis allowed) and the taxis belonging to the queue with the
 corresponding position.
\end_layout

\begin_layout Standard
Each of these entities has a simple structure with a limited number of fields
 except for the queue which requires a quite articulated structure to manage
 positions and sizes of queues.
 Thus, we select medium complexity for the latter and simple for the other
 ones.
 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
ILF=6\cdot7+1\cdot10=52FPs
\]

\end_inset


\end_layout

\begin_layout Subsubsection
ELF (External logical files)
\end_layout

\begin_layout Standard
myTaxiService has to interact with external systems, in particular with
 the GPS and the GoogleMaps API therefore we can identify the following
 ELFs:
\end_layout

\begin_layout Itemize

\emph on
Address validation 
\emph default
requires the interaction with the GoogleMaps API in order to check whether
 a string typed by the user corresponds to a valid address.
\end_layout

\begin_layout Itemize

\emph on
Coordinate/Address translation
\emph default
 requires the interaction with the GoogleMaps API in order to convert a
 coordinate retrieved by the GPS into an address and viceversa.
\end_layout

\begin_layout Itemize

\emph on
Travelling time 
\emph default
requires the interaction with the GoogleMaps API in order to compute the
 waiting time.
\end_layout

\begin_layout Itemize

\emph on
Passenger's geographic coordinates
\emph default
 requires the interaction with the GPS sytstem installed on the passenger
 smartphone or with the browser geolocalization to retrtive the passenger's
 position.
\end_layout

\begin_layout Itemize

\emph on
Taxi geographic coordinates
\emph default
 requires the interaction with the GPS installed on each taxi in order to
 find the position of the taxi itself.
\end_layout

\begin_layout Standard
All those data items are very compact and they share the same simple structure,
 so a simple complexity should be appropriate.
 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
ELF=5\cdot5=25FPs
\]

\end_inset


\end_layout

\begin_layout Subsubsection
EI (External inputs)
\end_layout

\begin_layout Standard
Since myTaxiService is an application characterized to have a high degree
 of interaction with the final user, we can identify the following EI.
\end_layout

\begin_layout Itemize

\emph on
Registration
\emph default
: this function requires the exchange of a relevant amount of information
 (username, password, lastname, firstname, email and address), in addition
 some checks has to be performed (like check that the username is not alrady
 used), so we can consider medium complexity with a contrbution of 4 FPs.
\end_layout

\begin_layout Itemize

\emph on
Login/Logout
\emph default
: this function is strandard and requires exchange of basic structured informati
on and simple operations, so it can be considered simple with a contrbution
 of 3 FPs.
\end_layout

\begin_layout Itemize

\emph on
Request
\emph default
: this function requires the insertion of some data (like address), the
 interaction with external systems (like GPS and GoogleMaps API) and with
 the DBMS, therefore it can be considered complex with a contrbution of
 6 FPs.
\end_layout

\begin_layout Itemize

\emph on
Taxi selection
\emph default
: this function requires non trivial elaborations related to the algorithm
 used to select the taxis to fullfill a request/reservation; it requires
 interaction with the DBMS and external systems therefore it can be considered
 complex with a contributon of 6 FPs.
\end_layout

\begin_layout Itemize

\emph on
Taxi queue management
\emph default
: this function requires the execution of the algorithm described in the
 design document for the taxi movement, in addition it requires to interact
 with external systems and the DBMS therefore it can be considered complex
 with a contributon of 6 FPs.
\end_layout

\begin_layout Itemize

\emph on
Reservation
\emph default
: this function requires interaction with the DBMS and with external systems,
 it has also to instantiate a new request associated to the reservation
 and to perform validity checks on the inserted data, therefore it can be
 considered complex with a contributon of 6 FPs.
\end_layout

\begin_layout Itemize

\emph on
Modify reservation
\emph default
: this function can be considered an extention of Reservation, adding a
 small new functionality, therefore it can be considered simple with a contribut
on of 3 FPs.
\end_layout

\begin_layout Itemize

\emph on
Cancel reservation
\emph default
: this function can be considered an extention of Reservation, adding a
 small new functionality, therefore it can be considered simple with a contribut
on of 3 FPs.
\end_layout

\begin_layout Itemize

\emph on
Request evaluation
\emph default
: this function requires to interact with the TMA and the analysis of the
 taxi queues, so it can be considered medium complexity with a contributon
 of 4 FPs.
\end_layout

\begin_layout Itemize

\emph on
Inform about availability
\emph default
: this funcion requires to check some conditions to validate the state changing
 of the taxi driver, it can be considered medium complexity with a contributon
 of 4 FPs.
\end_layout

\begin_layout Itemize

\emph on
Insert phone request
\emph default
: this function is just reduced to Request therefore it can be considered
 simple with a contribution of 3 FPs.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
EI=4\cdot3+3\cdot4+4\cdot6=48FPs
\]

\end_inset


\end_layout

\begin_layout Subsubsection
EO External output
\end_layout

\begin_layout Standard
The only external output generated by the myTaxiService are:
\end_layout

\begin_layout Itemize

\emph on
Movement notification: 
\emph default
that function is performed by the system to communicate to the taxi driver
 is the notification of the movement, since it requires the evaluation of
 the taxi queues it can be considered medium complexity with a contribution
 of 5 FPs.
\end_layout

\begin_layout Itemize

\emph on
Request notification: 
\emph default
this function is performed in order to communicate to the taxi driver a
 request to be carried out, it requires only to send information about the
 address of the passenger therefore it can be considered simple with a contribut
ion of 4 FPs.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
EI=1\cdot4+1\cdot5=9FPs
\]

\end_inset


\end_layout

\begin_layout Subsubsection
EQ External inquiries
\end_layout

\begin_layout Standard
We identified the following EQs.
\end_layout

\begin_layout Itemize

\emph on
Visualize request info
\emph default
: this function allows passenger, both registered or not, to visualize the
 information about the last request including waiting time and the number
 of incoming taxi.
\end_layout

\begin_layout Itemize

\emph on
Visualize previous reservations
\emph default
: this function allows registered passengers to visualize the previous sent
 reservations.
\end_layout

\begin_layout Itemize

\emph on
Visualize previous requests (taxi driver)
\emph default
: this function allows the taxi driver to visualize the previous requests
 carried out.
\end_layout

\begin_layout Standard
All these functions requires the interaction with the DBMS therefore they
 can be considered medium complexity.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
EI=3\cdot4=12FPs
\]

\end_inset


\end_layout

\begin_layout Subsubsection
UFP Unadjusted Function Points count
\end_layout

\begin_layout Standard
Here we summerize the number of function points identified in every category
 and we provide the UFP (Unadjusted Function Points count) which could possibly
 be adjusted to take into account organizational aspects and get an estimation
 of the effort, however this approach is typically very inprecise therefore
 we will use UFP in combination with the COCOMO approach.
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top" width="5cm">
<column alignment="center" valignment="top" width="1.5cm">
<row>
<cell multicolumn="1" alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Function type
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none" width="7cm">
\begin_inset Text

\begin_layout Plain Layout

\series bold
FPs
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
ILF (Internal Logical Files)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
52
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
ELF (External Logical Files)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
25
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
EI (External Inputs)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
48
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
EO (External Outputs)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
EQ (External Inquiries)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
Thus, we get at the end the value of UFP
\end_layout

\begin_layout Standard

\series bold
\begin_inset Box Shaded
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\series bold
\begin_inset Formula 
\[
UFP=ILF+ELF+EI+EO+EQ=146FPs
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Lines of code count
\end_layout

\begin_layout Standard
The Unadjusted Function Points (UFP) can be used to provide an estimation
 of the number of lines of code (SLOC) of the final project according to
 the specific implementation language chosen.
 Instad of referring to the 
\begin_inset Quotes eld
\end_inset

traditional
\begin_inset Quotes erd
\end_inset

 table proposed by Jones 1996 for the conversion factor, which by the way
 does not include a value for JEE, we adopt the more recent Function Points
 Language Table proposed in [7].
 myTaxiService is intended to be implemented with JEE, the table provides
 a range for the conversion factor SLOC/FP
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="5">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="2cm">
<column alignment="center" valignment="top" width="2cm">
<column alignment="center" valignment="top" width="2cm">
<column alignment="center" valignment="top" width="2cm">
<column alignment="center" valignment="top" width="2cm">
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Language
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Average
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Median
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Low
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
High
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
J2EE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
46
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
49
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
67
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
Not having precise information about the complexity of the implementation
 we think an average value should be proper, so 
\begin_inset Formula $SLOC/FP=46$
\end_inset

 and we get the value of SLOC.
\end_layout

\begin_layout Standard
\begin_inset Box Shaded
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Formula 
\[
SLOC=SLOC/FP\cdot UFP=46\cdot146=6716
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Notice that this value does not capture, for the most part, the client side
 of the application and the web server.
 Since both PMA, TMA and web server do not perform meaningful functions
 at requirement level but just auxiliary functions they are not highlited
 in the function points count, however from an implementative point of view
 they might require a relevant effort.
\end_layout

\begin_layout Subsection
Graphical representation
\end_layout

\begin_layout Standard
Here we provide an hystorgram representing the number of function points
 for each category.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename fp.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Function Points Hystogram
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
